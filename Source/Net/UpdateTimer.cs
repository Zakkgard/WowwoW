using HelperTools;
using System;
using System.Collections.Generic;
using System.Text;

namespace Server
{
    public class UpdateTimer : WowTimer
    {
        PlayerHandler playerHangler;
        Character loggedChar;
        public UInt64 increment = 0;

        public UpdateTimer(PlayerHandler ph, Character lc) : base(WowTimer.Priorities.Milisec10, 50, "UpdateTimer")
        {
            playerHangler = ph;
            loggedChar = lc;
            Start();
        }

        public override void OnTick()
        {
            byte[] self = { 0x95, 0xA9, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x25, 0x30, 0x15, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x80, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
            int t = 9;
            Converter.ToBytes(loggedChar.Guid, self, ref t);
            t = 0x96 - 8;
            Converter.ToBytes(increment++, self, ref t);

            /*
            foreach( Mobile m in World.allMobiles )
            {
                if ( m.Distance( loggedChar ) < 200 )
                {
                    playerHangler.Send( 0xA9, new byte[]{ 0x00, 0xB9, 0xA9, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x56, 0x34, 0x12, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x0F, 0x00, 0x3C, 0x00, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xD5, 0x2F, 0x15, 0x00, 0x00, 0x00, 0x00, 0x00, 0xD6, 0x2F, 0x15, 0x00, 0x00, 0x00, 0x00, 0x00, 0xD7, 0x2F, 0x15, 0x00, 0x00, 0x00, 0x00, 0x00, 0xD9, 0x2F, 0x15, 0x00, 0x00, 0x00, 0x00, 0x00, 0xD8, 0x2F, 0x15, 0x00, 0x00, 0x00, 0x00, 0x00, 0xDA, 0x2F, 0x15, 0x00, 0x00, 0x00, 0x00, 0x00, 0xDB, 0x2F, 0x15, 0x00, 0x00, 0x00, 0x00, 0x00} );
                }
            }*/
            base.OnTick();
        }
    }
}
